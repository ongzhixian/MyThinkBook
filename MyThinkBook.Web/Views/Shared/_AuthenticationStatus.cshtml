@using Microsoft.AspNetCore.Identity

@*@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
*@
<ul class="navbar-nav">
@if (User.Identity.IsAuthenticated)
{
    <li class="nav-item">
        <a class="nav-link" asp-area="" asp-controller="Home" asp-action="Profile" title="Manage">@User.Identity.Name</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" asp-area="" asp-controller="Home" asp-action="Impersonate" title="Manage">Impersonate</a> 
        | <a class="nav-link" asp-area="" asp-controller="Home" asp-action="LogOut" title="Log out">Log out</a>
    </li>
    @*
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">Logout</button>
        </form>
    </li>
    *@
}
else
{
    <li class="nav-item">
        <a class="nav-link" asp-area="" asp-controller="Home" asp-action="Login">Login</a>
    </li>
}
</ul>
