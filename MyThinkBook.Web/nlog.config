<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile=".logs/nlog-internal-MyThinkBook.log">

	<!-- enable asp.net core layout renderers -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
	</extensions>

	<!-- the targets to write to -->
	<targets>
		<!-- File Target for all log messages with basic details -->
		<target xsi:type="File" name="monitoringLog" fileName="./logs/MyThinkBook-monitoring-${shortdate}.log"
				layout="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}" />

		<!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
		<target xsi:type="File" name="traceLog" fileName="./logs/MyThinkBook-trace-${shortdate}.log"
				layout="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}|${callsite}" />

		<target xsi:type="File" name="structuredLog" fileName="./logs/MyThinkBook-structured-${shortdate}.log">
			<layout xsi:type="JsonLayout" includeAllProperties="true">
				<attribute name="time" layout="${longdate}" />
				<attribute name="level" layout="${level:upperCase=true}"/>
				<attribute name="message" layout="${message}" />
			</layout>
		</target>

		<!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
		<target xsi:type="Console" name="consoleOutput" layout="${MicrosoftConsoleLayout}" />
	</targets>

	
	<rules>

		<!-- Blackhole for specific application loggers -->
		<logger name="MyThinkBook.Web.Services.FxTradingEngineProxyService" minlevel="Info" final="true" />

		<!-- Log Info level application loggers -->
		<logger name="MyThinkBook.*" minlevel="Info" writeTo="consoleOutput, monitoringLog" final="true" />

		<!--Output hosting lifetime messages to console target for faster startup detection -->
		<!-- 
		<logger name="System.*" finalMinLevel="Warn" />
		<logger name="Microsoft.*" finalMinLevel="Warn" />
		<logger name="Microsoft.Hosting.Lifetime*" finalMinLevel="Info" />
		<logger name="*" minlevel="Trace" writeTo="ownFile-web" />
		-->

		<logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="consoleOutput, structuredLog, traceLog, monitoringLog" final="true" />
		<logger name="Microsoft.AspNetCore" minlevel="Warn" writeTo="consoleOutput, structuredLog, debugLog, monitoringLog" final="true" />

		<!-- SignalR
		<logger name="Microsoft.AspNetCore.SignalR" minlevel="Debug" writeTo="consoleOutput, structuredLog, debugLog, monitoringLog" final="true" />
		<logger name="Microsoft.AspNetCore.Http.Connections" minlevel="Debug" writeTo="consoleOutput, structuredLog, debugLog, monitoringLog" final="true" />
		-->

		<!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) 
		<logger name="System.Net.Http.*" maxlevel="Info" final="true" />
		<logger name="Microsoft.*" maxlevel="Warn" final="true" />
		<logger name="Microsoft.AspNetCore.HttpLogging.HttpLoggingMiddleware" maxlevel="Trace" writeTo="consoleOutput" final="true" />
		<logger name="System.Net.Http.*" maxlevel="Trace" writeTo="consoleOutput" final="true" />
		-->
		<!-- Disable for the distracting health check dependency
		Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService
		<logger name="Microsoft.Extensions.Diagnostics.HealthChecks.*" final="true" />
		-->

		<!-- All logs -->
		<logger name="*" minlevel="Warn" writeTo="consoleOutput" />
		<logger name="*" minlevel="Trace" writeTo="traceLog, structuredLog" />

	</rules>
</nlog>